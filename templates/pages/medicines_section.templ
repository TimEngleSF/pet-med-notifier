package pages

import (
	"time"
	"strconv"
	"github.com/TimEngleSF/pet-med-notifier/repository"
)

// TODO: use
templ MedicineSection(gm repository.GroupedMedicines, keys []repository.TimeKey) {
	<section class="flex flex-col justify-center items-center">
		for _, k := range keys {
			<p>{ k.String()  }</p>
			<div>
				for _, m := range gm[k] {
					if m.Taken {
						@MedicineTakenCard(m)
					} else {
						@MedicineCard(m)
					}
				}
			</div>
		}
	</section>
}

var cardStyle = "card w-80 max-w-96 text-primary-content"
var missed = "bg-red-400 "
var taken = "bg-emerald-500 "
var complete = "bg green opacity-80 "
var now = time.Now()
var hour = now.Hour()
var min = now.Minute()

templ MedicineCard(m repository.Medicine) {
	<div class={ templ.KV(taken, m.Taken), templ.KV(missed, !m.Taken), templ.KV(complete, m.Taken && m.Due), cardStyle }>
		<div class="card-body">
			<h2 class={ "card-title ", templ.KV("text-white line-through", m.Taken) }>{ m.Name }</h2>
			if m.Date != nil {
				<p>{ m.Date.String() }</p>
			}
			<div class="card-actions justify-end ">
				if m.Due && m.Taken {
					âœ…
				} else {
					<button class="btn" hx-trigger="click" hx-put={ "/medicine-taken?id=" + m.Id.Hex() + "&taken=" + strconv.FormatBool(!m.Taken) } hx-target="main" hx-swap="innerHTML">Take Med</button>
				}
			</div>
		</div>
	</div>
}

var takenCardStyle = " flex py-2 px-4 w-80 max-w-96 justify-between duration-1000 rounded-xl"

templ MedicineTakenCard(m repository.Medicine) {
	<div class={ templ.KV(taken, m.Taken), templ.KV(missed, !m.Taken), templ.KV(complete, m.Taken && m.Due), takenCardStyle }>
		<h2 class={ "card-title ", templ.KV("text-white line-through", m.Taken) }>{ m.Name }</h2>
		<button class="btn opacity-30" hx-trigger="click" hx-put={ "/medicine-taken?id=" + m.Id.Hex() + "&taken=" + strconv.FormatBool(!m.Taken) } hx-target="main" hx-swap="innerHTML">Reset</button>
	</div>
}
